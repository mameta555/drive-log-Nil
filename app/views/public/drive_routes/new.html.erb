<div class="container mx-auto m-5">
  <div class="row">
    <div class="col">
      <h2>ドライブルート新規投稿</h2>
      <% if @drive_route.errors.any? %>
        <%= @drive_route.errors.count %>件のエラーが発生しました
        <ul>
          <% @drive_route.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
        </ul>
      <% end %>
    </div>
  </div>

  <div>
    <%= flash[:notice] %>
  </div>
  <div class="row">
    <div class="col">
      <!--<h2>行き先の追加</h2>-->

      <%# if @route.errors.any? %>
        <%#= @route.errors.count %><!--件のエラーが発生しました
        <ul>
          <%# @route.errors.full_messages.each do |message| %>
            <li><%#= message %></li>
          <%# end %>
        </ul>
      <%# end %>-->

      <!--<div class="route_table">-->
        <!--行き先の一覧-->
        <%#= render 'public/routes/drive_route_index', drive_route: @drive_route %>
      <!--</div>-->

    </div>
  </div>

  <div class="row">


    <div class="col">
      <div id='map'></div>
    </div>

  </div>



  <div class="row">
    <div class="offset-sm-2 col-sm-8">
      <%= form_with model: @drive_route, class: 'drive-route' do |f| %>
        <div class="form-group">
          <h5>思い出の一枚</h5>
          <%= f.file_field :image, accept: "image/*" %>
        </div>
        <div class="form-group">
          <h5>タイトル</h5>
          <%= f.text_field :title, class: "form-control" %>
        </div>
        <div class="form-group">
          <h5>ドライブルートの紹介</h5>
          <%= f.text_area :body, rows: '5', cols: "50", class: "form-control" %>
        </div>
        <div class='form-group'>
          <h5>タグ</h5>
          <%= f.collection_check_boxes(:tag_ids, Tag.all, :id, :tag_name) do |tag| %>
          <div class='form-check'>
            <%= tag.label class: 'form-check-label' do %>
              <%= tag.check_box class: 'form-check-input' %>
              <%= tag.text %>
            <% end %>
          </div>
          <% end %>
        </div>
        <%= f.fields_for :routes do |ff| %>
          <%= render 'public/drive_routes/route_fields', f: ff %>
        <% end %>

        <div class='links m-3'>
          <%= link_to_add_association "行き先を追加", f, :routes, class: "btn btn-outline-success" %>
        </div>
        <div class="mb-4 d-flex justify-content-center">
          <%= f.submit '投稿する', class: "btn btn-primary btn-lg" %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script>

function codeAddress(e){
  let div_nested_fields = e.target.parentElement
  let index = e.target.parentElement.dataset.index
  let geocoder = new google.maps.Geocoder()

  let inputAddress = div_nested_fields.querySelector(
    '#drive_route_routes_attributes_' + index + '_destination'
  ).value
  let formLat = div_nested_fields.querySelector(
    '#drive_route_routes_attributes_' + index + '_lat'

  )
  let formLng = div_nested_fields.querySelector(
    '#drive_route_routes_attributes_' + index + '_lng'
  )
  geocoder.geocode( { 'address': inputAddress}, function(results, status) {
    if (status == 'OK') {
      let marker = map_markers[index]
      if (marker !== undefined) {
        marker.setMap(null)
        map_markers[index] = undefined
      }

      let lat = results[0].geometry.location.lat()
      let lng = results[0].geometry.location.lng()
      maps[index].panTo(new google.maps.LatLng(lat, lng))
      marker = new google.maps.Marker({
        position: { lat, lng },
        map: maps[index]
      })
      map_markers[index] = marker

      //検索した時に緯度経度を入力する
      formLat.value = results[0].geometry.location.lat();
      formLng.value = results[0].geometry.location.lng();

      // マーカーのドロップ（ドラッグ終了）時のイベント
      google.maps.event.addListener(marker, 'dragend', function(ev){
          // イベントの引数evの、プロパティ.latLngが緯度経度
          formLat.value = ev.latLng.lat();
          formLng.value = ev.latLng.lng();
      });
    } else {
      alert('該当する結果がありませんでした：' + status);
    }
  });
}

function initMap(){
  Array.from(document.querySelectorAll('.nested-map')).forEach(f => {
    let index = f.parentElement.dataset.index
    maps[index] = new google.maps.Map(f, {
      center: {lat: 35.6809591, lng: 139.7673068},
      zoom: 12,
    })
  })
}


var maps = []
var map_markers = []

Array.from(document.querySelectorAll('.nested-input-latlon-button')).forEach(e => {
  e.addEventListener('click', ev => codeAddress(ev))
})

$('form').on('cocoon:after-insert', (ev, elm) => {
  let target = elm[0]
  // cocoonが付与する謎の添字を持ってくる
  let index = target.querySelector('input.route_place').name.match(
    /drive_route\[routes_attributes\]\[(\d+)\]/
  )[1]
  target.dataset.index = index
  target.querySelector('.nested-input-latlon-button').addEventListener('click', ev => codeAddress(ev))
  maps[index] = new google.maps.Map(target.querySelector('.nested-map'), {
    center: {lat: 35.6809591, lng: 139.7673068},
    zoom: 12,
  })
})

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['API_KEY'] %>&callback=initMap" async defer></script>